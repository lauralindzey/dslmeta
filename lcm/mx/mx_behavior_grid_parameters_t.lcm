package mx;

struct mx_behavior_grid_parameters_t
{
  // Timestamp of when parameters were recieved by mx (acomms).
  // Or timestamp of when parameters were sent to mx (Ethernet).
  int64_t utime;	

  // Flag to indicate whether to immediately make this behavior
  // active as well.
  boolean atomically_activate;

  // Which grid specification to use.  Derived parameters
  // will then be computed automatically.
  boolean cwl_grid_spec; // true: center,width,length; false: trk0, N trks.
  
  // Behavior-specific ephemeral parameters.
  boolean interpret_depth_as_altitude_and_engage_bf;
  int16_t depth_goal;     // (m) Constant depth/altitude at which to fly during leg.
  int8_t thrust_prcnt;  // (-100 to 100) the thrust to apply
  float timeout;        // (s) timeout for whole grid to complete.

  // Common grid parameters
  int16_t spacing; // (m)  (+) for right-turning grids, (-) for left-turning

  // Center-hdg-length-width-lambda specification for grid.
  int16_t northing_center;
  int16_t easting_center;
  int16_t hdg_deg; // (deg) heading of first trackline.
  int16_t length; // (m) length of tracklines
  int16_t width; // (m) nominal width of grid.  Will be adjusted to center if needed.

  // Alternative is start/end/hdg of first trackline, N, lambda.)
  int16_t easting_start_trk0;
  int16_t northing_start_trk0;
  int16_t easting_goal_trk0;
  int16_t northing_goal_trk0;
  int16_t num_trk;         


}
